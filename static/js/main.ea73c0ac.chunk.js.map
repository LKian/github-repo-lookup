{"version":3,"sources":["Components/SearchForm.js","Components/RepoLastUpdated.js","Components/LinkGHPages.js","Components/CardRepo.js","Components/SearchResults.js","Components/App.js","index.js"],"names":["SearchForm","StyledForm","id","onSubmit","this","props","TextField","label","value","usernameWIP","onChange","handleChange","variant","Button","className","type","Component","styled","form","RepoLastUpdated","StyledRepoLastUpdated","Typography","color","gutterBottom","updated_at","split","div","LinkGHPages","console","log","StyledLinkGHPages","has_pages","Link","href","URLPage","target","rel","CardRepo","StyledCardRepo","Card","CardContent","name","CardActions","URLRepo","SearchResults","repoGrid","listOfRepos","message","Alert","severity","Grid","container","spacing","item","xs","justify","map","repo","key","homepage","html_url","StyledResults","fetchRepos","username","fetch","submittedUsername","then","response","json","catch","error","App","e","preventDefault","setState","handleSubmit","a","submittedText","state","repoArray","data","isLoading","validUsername","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea73c0ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass SearchForm extends Component {\n  render() {\n    return (\n      <StyledForm id=\"username-form\" onSubmit={this.props.onSubmit}>\n        <TextField\n          id=\"github-user-name\"\n          label=\"Username\"\n          value={this.props.usernameWIP}\n          onChange={this.props.handleChange}\n          variant=\"outlined\"\n        />\n        <Button className=\"form-submit\" type={\"submit\"}>\n          Submit\n        </Button>\n      </StyledForm>\n    );\n  }\n}\n\nconst StyledForm = styled.form`\n  padding: 50px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass RepoLastUpdated extends Component {\r\n  render() {\r\n    return (\r\n      <StyledRepoLastUpdated>\r\n        {\" \"}\r\n        <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\r\n          Last Updated: {this.props.updated_at.split(\"T\")[0]}\r\n        </Typography>\r\n      </StyledRepoLastUpdated>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledRepoLastUpdated = styled.div`\r\n  width: 100%;\r\n  h4 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default RepoLastUpdated;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nclass LinkGHPages extends Component {\r\n  render() {\r\n    console.log(\"from LinkGHPages \", this.props);\r\n    return (\r\n      <StyledLinkGHPages>\r\n        {this.props.has_pages ? (\r\n          <Link\r\n            href={this.props.URLPage}\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n            variant=\"body2\"\r\n          >\r\n            Live Demo\r\n          </Link>\r\n        ) : null}\r\n      </StyledLinkGHPages>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledLinkGHPages = styled.div``;\r\n\r\nexport default LinkGHPages;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport RepoLastUpdated from \"./RepoLastUpdated\";\r\nimport LinkGHPages from \"./LinkGHPages\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\n\r\nclass CardRepo extends Component {\r\n  render() {\r\n    console.log(\"< CardRepo />\", this.props);\r\n    return (\r\n      <StyledCardRepo>\r\n        {\" \"}\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"overline\" color=\"textPrimary\" gutterBottom>\r\n              {this.props.name}\r\n            </Typography>\r\n            <RepoLastUpdated updated_at={this.props.updated_at} />\r\n          </CardContent>\r\n          <CardActions className=\"button-container\">\r\n            <Link\r\n              href={this.props.URLRepo}\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              variant=\"body2\"\r\n            >\r\n              <CodeIcon />\r\n            </Link>\r\n            <LinkGHPages\r\n              has_pages={this.props.has_pages}\r\n              URLPage={this.props.URLPage}\r\n            />\r\n          </CardActions>\r\n        </Card>\r\n      </StyledCardRepo>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledCardRepo = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport default CardRepo;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardRepo from \"./CardRepo\";\r\n\r\nclass SearchResults extends Component {\r\n  render() {\r\n    const repoGrid = this.props.listOfRepos.message ? (\r\n      <Alert severity=\"error\">Invalid Username</Alert>\r\n    ) : (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={4}>\r\n            {this.props.listOfRepos.map((repo) => {\r\n              return (\r\n                <Grid item key={repo.id} className=\"card\">\r\n                  <CardRepo\r\n                    name={repo.name}\r\n                    updated_at={repo.updated_at}\r\n                    has_pages={repo.has_pages}\r\n                    URLPage={repo.homepage}\r\n                    URLRepo={repo.html_url}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n\r\n    return <StyledResults>{repoGrid}</StyledResults>;\r\n  }\r\n}\r\n\r\nconst StyledResults = styled.div`\r\n  .card {\r\n    min-width: 275px;\r\n  }\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .button {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport SearchResults from \"./SearchResults\";\n\nconst githubRepoURL = (submittedUsername) =>\n  `https://api.github.com/users/${submittedUsername}/repos?sort=updated`;\n\nconst fetchRepos = (username) => {\n  return fetch(githubRepoURL(username))\n    .then((response) => {\n      let data = response.json();\n      return data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usernameWIP: \"\",\n      username: \"\",\n      listOfRepos: [],\n      validUsername: false,\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"Component did mount.\");\n    await fetchRepos();\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      usernameWIP: e.target.value,\n    });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let submittedText = this.state.usernameWIP;\n\n    let repoArray = [];\n\n    await fetchRepos(this.state.usernameWIP).then(function (data) {\n      console.log(\"Data : \", data);\n      repoArray = data;\n    });\n\n    this.setState({\n      usernameWIP: \"\",\n      username: submittedText,\n      listOfRepos: repoArray,\n      isLoading: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchForm\n          usernameWIP={this.state.usernameWIP}\n          username={this.state.username}\n          onSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          listOfRepos={this.state.listOfRepos}\n        />\n        <SearchResults\n          listOfRepos={this.state.listOfRepos}\n          username={this.state.username}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}